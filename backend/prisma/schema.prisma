// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}
generator zod {
  provider                 = "zod-prisma"
  output                   = "./zod" // (default) the directory where generated zod schemas will be saved

  relationModel            = true // (default) Create and export both plain and related models.
  // relationModel         = "default" // Do not export model without relations.
  // relationModel         = false // Do not generate related model

  modelCase                = "PascalCase" // (default) Output models using pascal case (ex. UserModel, PostModel)
  // modelCase             = "camelCase" // Output models using camel case (ex. userModel, postModel)

  modelSuffix              = "Model" // (default) Suffix to apply to your prisma models when naming Zod schemas

  // useDecimalJs          = false // (default) represent the prisma Decimal type using as a JS number
  useDecimalJs             = true // represent the prisma Decimal type using Decimal.js (as Prisma does)

  // imports                  = null // (default) will import the referenced file in generated schemas to be used via imports.someExportedVariable

  // https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
  prismaJsonNullability    = true // (default) uses prisma's scheme for JSON field nullability
  // prismaJsonNullability = false // allows null assignment to optional JSON fields
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid())
  firstName String
  lastName  String
}

model LineItem {
  id         String  @id @default(uuid())
  receipt    Receipt @relation(references: [id], fields: [receiptId])
  receiptId  String
  name       String?
  unitPrice  Int? //cents
  totalPrice Int? //cents
  quantity   Int?     @default(1)
  venderCode String?
  currency   String  @default("usd")
  isVerified Boolean @default(false)
}

model Receipt {
  id              String     @id @default(uuid())
  date            String?
  // in cents
  total           Int? 
  // in cents
  tax             Int? 
  amountPaid      Int?
  discountTotal   Int?        @default(0)
  vendorName      String?
  street          String?
  city            String?
  state           String?
  vendorReceiptId String?
  lineItems       LineItem[]
  isVerified      Boolean    @default(false)
}
